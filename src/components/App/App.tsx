/**
 * –•—É–∫ useQuery

const myQuery = useQuery({
  queryKey: ['myQueryKey'], // –∫–ª—é—á –∑–∞–ø–∏—Ç—É
  queryFn: myQueryFunction   // —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø–∏—Ç—É
});

queryKey ‚Äì —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –∑–∞–ø–∏—Ç—É,
queryFn ‚Äì –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —â–æ –≤–∏–∫–æ–Ω—É—î –∑–∞–ø–∏—Ç –¥–æ API –∞–±–æ —ñ–Ω—à–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö. –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –ø—Ä–æ–º—ñ—Å —ñ–∑ –¥–∞–Ω–∏–º–∏. –í–æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –¥–ª—è –∑–∞–ø–∏—Ç—É.

–•—É–∫ useQuery –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±‚Äô—î–∫—Ç –∑ –∫–æ—Ä–∏—Å–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∑–∞–ø–∏—Ç:

const { data, error, isLoading, isError, isSuccess } = useQuery({
  queryKey: ['myQueryKey'], 
  queryFn: myQueryFunction  
});
data ‚Äì –¥–∞–Ω—ñ, —è–∫—ñ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –∑–∞–ø–∏—Ç—É.
error ‚Äì —è–∫—â–æ –∑–∞–ø–∏—Ç –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –ø–æ–º–∏–ª–∫–æ—é, —Ü—è –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –º—ñ—Å—Ç–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É.
isLoading ‚Äì —è–∫—â–æ –∑–∞–ø–∏—Ç —â–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–¥–µ true.
isError ‚Äì —è–∫—â–æ –∑–∞–ø–∏—Ç –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ–Ω–∞—Ç–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ –º–µ—Ä–µ–∂–µ–≤—ñ –ø–æ–º–∏–ª–∫–∏), –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–¥–µ true.
isSuccess ‚Äì —è–∫—â–æ –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–≤—Å—è —ñ –¥–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ, –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–¥–µ true.


–•—É–∫ useQuery –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è GET-–∑–∞–ø–∏—Ç—ñ–≤, —Ç–æ–±—Ç–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ API, 
 */
//...........................................................................
// import { useQuery } from '@tanstack/react-query';
// import axios from 'axios';

// const fetchPerson = async () => {
//   const response = await axios.get(`https://swapi.info/api/people/13`);
//   return response.data;
// };

// export default function App() {
//   const { data, error, isLoading, isError } = useQuery({
//     queryKey: ['person'],
//     queryFn: fetchPerson,
//   });

//   return (
//     <>
//       {isLoading && <p>Loading...</p>}
//       {isError && <p>An error occurred: {error.message}</p>}
//       {data && <pre>{JSON.stringify(data, null, 2)}</pre>}
//     </>
//   );
// }
//.............................................................................
/**
 * ------------------------–ö–ª—é—á—ñ –∑–∞–ø–∏—Ç—É-----------------------------------------//
–í –æ—Å–Ω–æ–≤—ñ React Query –ª–µ–∂–∏—Ç—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è–º –∑–∞–ø–∏—Ç—ñ–≤, —è–∫–µ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–ª—é—á—ñ–≤ –∑–∞–ø–∏—Ç—ñ–≤. –Ø–∫—â–æ –∫–ª—é—á –∑–∞–ø–∏—Ç—É –∑–º—ñ–Ω—é—î—Ç—å—Å—è, React Query —Ä–æ–∑—É–º—ñ—î, —â–æ —Ü–µ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Ç, —ñ –≤–∏–∫–æ–Ω—É—î –π–æ–≥–æ –∑–Ω–æ–≤—É. –¶–µ –¥—É–∂–µ –∫–æ—Ä–∏—Å–Ω–æ, –∫–æ–ª–∏ –≤–∏ —Ö–æ—á–µ—Ç–µ, —â–æ–± –∑–∞–ø–∏—Ç –ø–æ–≤—Ç–æ—Ä—é–≤–∞–≤—Å—è, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ.

–ó–º—ñ–Ω–∞ –∫–ª—é—á–∞ –∑–∞–ø–∏—Ç—É –∑–∞–∑–≤–∏—á–∞–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Ç –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É –∞–±–æ –ø—Ä–æ–ø—Å—ñ–≤ —É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ.

–†–æ–∑–≥–ª—è–Ω–µ–º–æ –ø—Ä–∏–∫–ª–∞–¥, –∫–æ–ª–∏ –≤–∏ —Ö–æ—á–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤—ñ –¥–∞–Ω—ñ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –∫–ª—ñ–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –ª—ñ—á–∏–ª—å–Ω–∏–∫ –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è, —ñ –≤–∏ —Ä–æ–±–∏—Ç–µ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑ API (Star Wars API).
 */
//......................................................................
// import { useState } from 'react';
// import { useQuery } from '@tanstack/react-query';
// import axios from 'axios';

// const fetchPerson = async (id: number) => {
//   const response = await axios.get(`https://swapi.info/api/people/${id}`);
//   return response.data;
// };

// export default function App() {
//   const [count, setCount] = useState(1);

//   const { data, error, isLoading, isError } = useQuery({
//     queryKey: ['person', count], // –∑–º—ñ–Ω—é—î–º–æ –∫–ª—é—á –∑–∞–ø–∏—Ç—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ count
//     queryFn: () => fetchPerson(count),
//   });

//   return (
//     <>
//       <button onClick={() => setCount(count + 1)}>
//         Get next character with ID: {count}
//       </button>
//       {isLoading && <p>Loading...</p>}
//       {isError && <p>Error: {error?.message}</p>}
//       {data && <pre>{JSON.stringify(data, null, 2)}</pre>}
//     </>
//   );
// }
//.......................................................................................
/**
 * queryKey: ['person', count] ‚Äì —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –¥–ª—è –∑–∞–ø–∏—Ç—É, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å –º–∞—Å–∏–≤. –í–∞–∂–ª–∏–≤–æ, —â–æ –º–∏ –¥–æ–¥–∞—î–º–æ –∑–º—ñ–Ω–Ω—É count –¥–æ —Ü—å–æ–≥–æ –∫–ª—é—á–∞. –ö–æ–ª–∏ count –∑–º—ñ–Ω—é—î—Ç—å—Å—è, React Query –±—É–¥–µ –≤–≤–∞–∂–∞—Ç–∏ —Ü–µ –Ω–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∫–æ–Ω–∞—î –π–æ–≥–æ –∑–Ω–æ–≤—É.
queryFn: () => fetchPerson(count) ‚Äì —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø–∏—Ç—É, —è–∫–∞ –ø—Ä–∏–π–º–∞—î count —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä. –¶–µ –¥–æ–∑–≤–æ–ª—è—î –∫–æ–∂–Ω–æ–≥–æ —Ä–∞–∑—É –∑–∞–ø–∏—Ç—É–≤–∞—Ç–∏ –Ω–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞.

üß† –ö–æ–∂–Ω–æ–≥–æ —Ä–∞–∑—É, –∫–æ–ª–∏ –∑–º—ñ–Ω—é—î—Ç—å—Å—è count, –∑–º—ñ–Ω–∞ –∫–ª—é—á–∞ –∑–∞–ø–∏—Ç—É –≥–∞—Ä–∞–Ω—Ç—É—î, —â–æ –∑–∞–ø–∏—Ç –±—É–¥–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–∏–π –∑ –Ω–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏. –¶–µ–π –∑–∞–ø–∏—Ç –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —ñ –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É count.
 */
//==================================================================//
/**
 * -------------------–ó–∞–ª–µ–∂–Ω—ñ –∑–∞–ø–∏—Ç–∏------------------------------//
 * 
–ó–∞–ª–µ–∂–Ω—ñ –∑–∞–ø–∏—Ç–∏ (Dependent Queries) ‚Äì —Ü–µ –∑–∞–ø–∏—Ç–∏, —è–∫—ñ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —ñ–Ω—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –∞–±–æ —Å—Ç–∞–Ω—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –í React Query –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å enabled –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è useQuery.

–Ø–∫—â–æ —Ö—É–∫ useQuery –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ enabled, –∑–∞–ø–∏—Ç –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ enabled, —â–æ–± —É–º–æ–≤–Ω–æ –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ–≤–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å –∞–±–æ –ø–æ–¥—ñ–π. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –Ω–µ –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å –¥–æ —Ç–æ–≥–æ, —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–µ–¥–µ –¥–∞–Ω—ñ –≤ —Ñ–æ—Ä–º—É —á–∏ –≤–∏–±–µ—Ä–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ.

const myQuery = useQuery({
	queryKey: ['myKey'],
	queryFn: myQueryFn,
	enabled: false
});

enabled: true ‚Äì –∑–∞–ø–∏—Ç –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–¥—Ä–∞–∑—É –∞–±–æ –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π.
enabled: false ‚Äì –∑–∞–ø–∏—Ç –Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –º–æ–Ω—Ç—É—é—Ç—å—Å—è —á–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–º—ñ–Ω—é—é—Ç—å—Å—è.

–£—è–≤—ñ—Ç—å, —â–æ —É –≤–∞—Å —î —Ñ–æ—Ä–º–∞, –¥–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –∫–ª—é—á –¥–ª—è –ø–æ—à—É–∫—É. –ó–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –º–∞—î –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö. –î–ª—è —Ü—å–æ–≥–æ –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ enabled.
 */
//...................................................................
// import { useState } from 'react';
// import { useQuery } from '@tanstack/react-query';
// import axios from 'axios';

// const fetchCharacter = async (id: string) => {
//   const response = await axios.get(`https://swapi.info/api/people/${id}`);
//   return response.data;
// };

// export default function App() {
//   const [characterId, setCharacterId] = useState('');

//   const { data, isLoading, isError, error } = useQuery({
//     queryKey: ['character', characterId],
//     queryFn: () => fetchCharacter(characterId),
//     enabled: characterId !== '',
//   });

//   const handleSearch = (formData: FormData) => {
//     const id = formData.get('id') as string;
//     setCharacterId(id);
//   };

//   return (
//     <>
//       <form action={handleSearch}>
//         <input type="text" name="id" placeholder="Enter character ID" />
//         <button type="submit">Search</button>
//       </form>
//       {isLoading && <p>Loading data, please wait...</p>}
//       {isError && <p>Whoops, something went wrong! {error?.message}</p>}
//       {data && <pre>{JSON.stringify(data, null, 2)}</pre>}
//     </>
//   );
// }
//..................................................................
/**
 * –ó–∞–≤–¥—è–∫–∏ enabled: characterId !== "" ‚Äì –∑–∞–ø–∏—Ç –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ, –∫–æ–ª–∏ –≤ –ø–æ–ª–µ –ø–æ—à—É–∫—É –≤–≤–µ–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è. –Ø–∫—â–æ characterId –ø–æ—Ä–æ–∂–Ω—î, –∑–∞–ø–∏—Ç –Ω–µ –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å.

üß† –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å enabled –∫–æ—Ä–∏—Å–Ω–∞ –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–∏—Ö GET-–∑–∞–ø–∏—Ç—ñ–≤, –∫–æ–ª–∏ –∑–∞–ø–∏—Ç –º–∞—î –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—å –ª–∏—à–µ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –∑–º—ñ–Ω–∏—Ç—å—Å—è —Å—Ç–∞–Ω –∞–±–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–∫–æ–Ω–∞—î –ø–µ–≤–Ω—É –¥—ñ—é (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –≤–≤–µ–¥–µ –¥–∞–Ω—ñ –≤ —Ñ–æ—Ä–º—É –∞–±–æ –≤–∏–±–µ—Ä–µ –æ–ø—Ü—ñ—é).
 */
//==========================================================================//
import { useState } from 'react';
import { useQuery, keepPreviousData } from '@tanstack/react-query';
import SearchForm from '../SearchForm/SearchForm';
import ArticleList from '../ArticleList/ArticleList';
import { fetchArticles } from '../sevices/ArticleServis';

export default function App() {
  const [topic, setTopic] = useState('');
  const [currentPage, setCurrentPage] = useState(1);
  const { data, isLoading, isError } = useQuery({
    queryKey: ['articles', topic, currentPage],
    queryFn: () => fetchArticles(topic, currentPage),
    enabled: topic !== '',
    placeholderData: keepPreviousData,
  });

  const totalPages = data?.nbPages ?? 0;

  const handleSearch = async (newTopic: string) => {
    setTopic(newTopic);
    setCurrentPage(1);
  };

  return (
    <>
      <SearchForm onSubmit={handleSearch} />
      <p>
        Current page {currentPage} | Total pages {totalPages}
      </p>
      <button
        onClick={() => setCurrentPage(Math.max(currentPage - 1, 1))}
        disabled={currentPage === 1}
      >
        Previous
      </button>
      <button
        onClick={() => setCurrentPage(currentPage + 1)}
        disabled={currentPage >= totalPages}
      >
        Next
      </button>
      {isLoading && <p>Loading data, please wait...</p>}
      {isError && <p>Whoops, something went wrong! Please try again!</p>}
      {data && data.hits.length > 0 && <ArticleList items={data.hits} />}
    </>
  );
}
